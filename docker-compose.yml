version: "3.9"
services:
  index:
    image: opensearchproject/opensearch
    expose:
      - "9200"
    ports:
      - "127.0.0.1:9200:9200"
    container_name: index
    environment:
      - node.name=index
      - cluster.name=opensanctions-index
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - plugins.security.disabled=true
      - plugins.security.ssl.http.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - index-os-data:/usr/share/elasticsearch/data
    deploy:
      placement:
        max_replicas_per_node: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ['CMD', 'bash', '-ec', 'curl -u admin:admin http://localhost:9200/_cluster/health | grep -E "yellow|green"']
      interval: 20s
      timeout: 10s
      start_period: 15s
      retries: 3

  app:
    container_name: yente
    image: ghcr.io/opensanctions/yente:latest
    depends_on:
      index:
        condition: service_healthy
    ports:
      - "127.0.0.1:8000:8000"
    environment:
      YENTE_ELASTICSEARCH_URL: http://index:9200
      YENTE_STATEMENT_API: "false"
      # Set this to a randomly generated string to enable the /updatez API:
      YENTE_UPDATE_TOKEN: ""
    # If you want to index data from the host machine as a custom dataset,
    # create a volume mount here to make that data accessible from the
    # container:
    # volumes:
    #   - "/path/on/the/host/computer:/data"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/healthz" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 3s
    deploy:
      mode: replicated
      # Run multiple instances for better scale:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3

volumes:
  index-os-data: null
